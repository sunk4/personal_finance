/* tslint:disable */
/* eslint-disable */
/**
 * API Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CategoryDto } from './CategoryDto';
import {
    CategoryDtoFromJSON,
    CategoryDtoFromJSONTyped,
    CategoryDtoToJSON,
    CategoryDtoToJSONTyped,
} from './CategoryDto';
import type { UserDto } from './UserDto';
import {
    UserDtoFromJSON,
    UserDtoFromJSONTyped,
    UserDtoToJSON,
    UserDtoToJSONTyped,
} from './UserDto';

/**
 * 
 * @export
 * @interface BudgetDto
 */
export interface BudgetDto {
    /**
     * 
     * @type {string}
     * @memberof BudgetDto
     */
    id?: string;
    /**
     * 
     * @type {Date}
     * @memberof BudgetDto
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof BudgetDto
     */
    updatedAt?: Date;
    /**
     * 
     * @type {UserDto}
     * @memberof BudgetDto
     */
    user?: UserDto;
    /**
     * 
     * @type {string}
     * @memberof BudgetDto
     */
    name?: string;
    /**
     * 
     * @type {CategoryDto}
     * @memberof BudgetDto
     */
    category?: CategoryDto;
    /**
     * 
     * @type {number}
     * @memberof BudgetDto
     */
    budgetAmount?: number;
    /**
     * 
     * @type {number}
     * @memberof BudgetDto
     */
    spentAmount?: number;
    /**
     * 
     * @type {Date}
     * @memberof BudgetDto
     */
    startDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof BudgetDto
     */
    endDate?: Date;
    /**
     * 
     * @type {number}
     * @memberof BudgetDto
     */
    remainingAmount?: number;
}

/**
 * Check if a given object implements the BudgetDto interface.
 */
export function instanceOfBudgetDto(value: object): value is BudgetDto {
    return true;
}

export function BudgetDtoFromJSON(json: any): BudgetDto {
    return BudgetDtoFromJSONTyped(json, false);
}

export function BudgetDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BudgetDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
        'user': json['user'] == null ? undefined : UserDtoFromJSON(json['user']),
        'name': json['name'] == null ? undefined : json['name'],
        'category': json['category'] == null ? undefined : CategoryDtoFromJSON(json['category']),
        'budgetAmount': json['budgetAmount'] == null ? undefined : json['budgetAmount'],
        'spentAmount': json['spentAmount'] == null ? undefined : json['spentAmount'],
        'startDate': json['startDate'] == null ? undefined : (new Date(json['startDate'])),
        'endDate': json['endDate'] == null ? undefined : (new Date(json['endDate'])),
        'remainingAmount': json['remainingAmount'] == null ? undefined : json['remainingAmount'],
    };
}

export function BudgetDtoToJSON(json: any): BudgetDto {
    return BudgetDtoToJSONTyped(json, false);
}

export function BudgetDtoToJSONTyped(value?: BudgetDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'user': UserDtoToJSON(value['user']),
        'name': value['name'],
        'category': CategoryDtoToJSON(value['category']),
        'budgetAmount': value['budgetAmount'],
        'spentAmount': value['spentAmount'],
        'startDate': value['startDate'] == null ? undefined : ((value['startDate']).toISOString()),
        'endDate': value['endDate'] == null ? undefined : ((value['endDate']).toISOString()),
        'remainingAmount': value['remainingAmount'],
    };
}

